name: de-lambda-deployment

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    if: true
    name: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout-github-repo
        uses: actions/checkout@v4
      - name: set-up-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: set-up-requirements
        run: make requirements
      - name: set-up-dev-environment
        run: make dev-setup
      - name: Create .env
        run: 
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
      - name: run-tests
        run: make run-checks

        
      # - name: Create .env file
      #   uses: SpicyPizza/create-envfile@v2.0.3

       
        # with:
        #   envkey_SECRET_KEY: ${{secrets.DB_NAME}}
        #   envkey_SECRET_KEY_HOST: ${{secrets.DB_HOST}}
        #   envkey_SECRET_KEY_PORT: ${{secrets.DB_PORT}}
        #   envkey_SECRET_KEY_USER: ${{secrets.DB_USER}}
        #   envkey_SECRET_KEY_PASSWORD: ${{secrets.DB_PASSWORD}}
        #   file_name: .env
    
        # env:
        #   DB_NAME: ${{secrets.DB_NAME}}
        #   DB_HOST: ${{secrets.DB_HOST}}
        #   DB_PORT: ${{secrets.DB_PORT}}
        #   DB_USER: ${{secrets.DB_USER}}
        #   DB_PASSWORD: ${{secrets.DB_PASSWORD}}


  deploy-aws:
    if: true
    name: deploy-aws
    needs: run-tests
    environment: dev 
    runs-on: ubuntu-latest
    steps: 
      - name: checkout-github-repo
        uses: actions/checkout@v4
      - name: install terraform-cli
        uses: hashicorp/setup-terraform@v3
      - name: configure-AWS-crudentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_DEFAULT_REGION}}
      - name: terraform init
        working-directory: terraform
        run: terraform init
      - name: terraform plan
        working-directory: terraform
        run: terraform plan
      - name: terraform apply
        working-directory: terraform
        run: terraform apply -auto-approve
    
  
